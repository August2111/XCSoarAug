# 3rd-Party # 3rd-Party # 3rd-Party # 3rd-Party # 3rd-Party # 3rd-Party # 3rd-Party # 3rd-Party # 3rd-Party # 3rd-Party 
cmake_minimum_required(VERSION 3.15)

set(TARGET_NAME 3rd_party)
message(STATUS "+++ Start CMake ${CMAKE_CURRENT_SOURCE_DIR}!")

set(EP_BASE "${THIRD_PARTY}/external")  # later remove 'External!'
set(EP_CMAKE "${THIRD_PARTY}/cmake")  # later remove 'cmake!'
ExternalProject_Add(
   lua
   URL "https://www.lua.org/ftp/${XCSOAR_LUA_VERSION}.tar.gz"
#   URL_HASH 
   PREFIX  "${EP_CMAKE}/lua/${XCSOAR_LUA_VERSION}"
   # ZIP_DATE 2018-06-26 
   # FILESIZE 303543
   URL_HASH MD5=4f4b4f323fd3514a68e0ab3da8ce3455
   # URL_HASH SHA1=112eb10ff04d1b4c9898e121d6bdf54a81482447

   # INSTALL_DIR "${LINK_LIBS}/lua"
   # DOWNLOAD_DIR "${THIRD_PARTY}/download"
   # SOURCE_DIR  "${THIRD_PARTY}/source"
   # DOWNLOAD_COMMAND ""
   # CONFIGURE_COMMAND ""
   # INSTALL_COMMAND ""

#   CMAKE_ARGS "-DCMAKE_INSTALL_PREFIX=${LINK_LIBS}/lua/${XCSOAR_LUA_VERSION}" "-DCMAKE_INSTALL_INCLUDEDIR=include"
#   "-DCMAKE_INSTALL_LIBDIR=lib/${TOOLCHAIN}" # "-DCMAKE_INSTALL_BINDIR=bin/${TOOLCHAIN}"
   # BUILD_COMMAND make generic
   PATCH_COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_CURRENT_SOURCE_DIR}/lua/CMakeLists.txt" <SOURCE_DIR>/CMakeLists.txt
   BUILD_ALWAYS true
   # BUILD_IN_SOURCE true
)

# ---------------------------------------------------------------------------
option(USE_SYSTEM_ZLIB "Should we use the system zlib?" OFF)

set(ZLIB_VERSION "1.2.10")
set(XCSOAR_ZLIB_VERSION "zlib-${ZLIB_VERSION}")  # reset!
set(ZLIB_INSTALL_DIR "${LINK_LIBS}/zlib/${XCSOAR_ZLIB_VERSION}")
set(ZLIB_PREFIX "${EP_CMAKE}/zlib/${XCSOAR_ZLIB_VERSION}")
#-------------------
ExternalProject_Add(
   zlib
#   URL "file://${THIRD_PARTY}/_Download/zlib1211.zip"
   GIT_REPOSITORY "https://github.com/madler/zlib.git"
   GIT_TAG "v${ZLIB_VERSION}"

   PREFIX  "${ZLIB_PREFIX}"
   BINARY_DIR    "${ZLIB_PREFIX}/build/${TOOLCHAIN}"
   INSTALL_DIR "${LINK_LIBS}/zlib/${XCSOAR_ZLIB_VERSION}"
#   CONFIGURE_COMMAND "cd ../zlib-build && cmake -DCMAKE_INSTALL_PREFIX=<INSTALL_DIR> ../src"
#   CONFIGURE_COMMAND "cd ../zlib-build && cmake -DCMAKE_INSTALL_PREFIX=${LINK_LIBS}/zlib/${XCSOAR_ZLIB_VERSION} ../src"

     CMAKE_ARGS "-DCMAKE_INSTALL_PREFIX=<INSTALL_DIR>"
     # ${LINK_LIBS}/zlib/${XCSOAR_ZLIB_VERSION}"
#  #   "-DCMAKE_INSTALL_INCLUDEDIR=include"
#  #   "-DCMAKE_INSTALL_LIBDIR=lib/${TOOLCHAIN}"
#     "-DINSTALL_BIN_DIR:PATH=${ZLIB_INSTALL_DIR}/bin/${TOOLCHAIN}"
#     "-DINSTALL_INC_DIR:PATH=${ZLIB_INSTALL_DIR}/include"
#     "-DINSTALL_LIB_DIR:PATH=${ZLIB_INSTALL_DIR}/lib/${TOOLCHAIN}"
#     "-DINSTALL_MAN_DIR:PATH=${ZLIB_INSTALL_DIR}/share/man"
#     "-DINSTALL_PKGCONFIG_DIR:PATH=${ZLIB_INSTALL_DIR}/share/pkgconfig"
     "-DINSTALL_BIN_DIR:PATH=<INSTALL_DIR>/bin/${TOOLCHAIN}"
#     "-DINSTALL_INC_DIR:PATH=<INSTALL_DIR>/include"
     "-DINSTALL_LIB_DIR:PATH=<INSTALL_DIR>/lib/${TOOLCHAIN}"
#     "-DINSTALL_MAN_DIR:PATH=<INSTALL_DIR>/share/man"
#     "-DINSTALL_PKGCONFIG_DIR:PATH=${ZLIB_INSTALL_DIR}/share/pkgconfig"
#  #   CMAKE_CACHE_ARGS "-DCMAKE_INSTALL_PREFIX=${LINK_LIBS}/zlib/${XCSOAR_ZLIB_VERSION}"
#  #   "-DCMAKE_INSTALL_INCLUDEDIR=include"
#  #   "-DCMAKE_INSTALL_LIBDIR=lib/${TOOLCHAIN}"
#  #   "-DINSTALL_BIN_DIR:PATH=${ZLIB_INSTALL_DIR}/bin/${TOOLCHAIN}"
#  #   "-DINSTALL_INC_DIR:PATH=${ZLIB_INSTALL_DIR}/include"
#  #   "-DINSTALL_LIB_DIR:PATH=${ZLIB_INSTALL_DIR}/lib/${TOOLCHAIN}"
#  #   "-DINSTALL_MAN_DIR:PATH=${ZLIB_INSTALL_DIR}/share/man"
#  #   "-DINSTALL_PKGCONFIG_DIR:PATH=${ZLIB_INSTALL_DIR}/share/pkgconfig"
   BUILD_ALWAYS true
   # BUILD_IN_SOURCE true
)

set(XCSOAR_JASPER_VERSION "jasper-2.0.16")  # reset!
set(JASPER_PREFIX "${EP_CMAKE}/jasper/${XCSOAR_JASPER_VERSION}")
ExternalProject_Add(
   jasper
   URL "file://${THIRD_PARTY}/_Download/${XCSOAR_JASPER_VERSION}.tar.gz"
   GIT_REPOSITORY "https://github.com/mdadams/jasper.git"
   GIT_TAG "version-2.0.16"
   PREFIX  "${EP_CMAKE}/jasper/${XCSOAR_JASPER_VERSION}"
   BINARY_DIR    "${JASPER_PREFIX}/build/${TOOLCHAIN}"
   INSTALL_DIR "${LINK_LIBS}/jasper/${XCSOAR_JASPER_VERSION}"
#   CONFIGURE_COMMAND "cd ../zlib-build && cmake -DCMAKE_INSTALL_PREFIX=<INSTALL_DIR> ../src"
#   CONFIGURE_COMMAND "cd ../zlib-build && cmake -DCMAKE_INSTALL_PREFIX=${LINK_LIBS}/zlib/${XCSOAR_ZLIB_VERSION} ../src"

     CMAKE_ARGS "-DCMAKE_INSTALL_PREFIX=<INSTALL_DIR>"
     "-DCMAKE_INSTALL_BINDIR=bin/${TOOLCHAIN}"  #  :PATH=<INSTALL_DIR>/bin/${TOOLCHAIN}"
     "-DCMAKE_INSTALL_LIBDIR=lib/${TOOLCHAIN}"  # :PATH=<INSTALL_DIR>/lib/${TOOLCHAIN}"
     "-DCMAKE_INSTALL_COMPONENT=bin/${TOOLCHAIN}"  # :PATH=<INSTALL_DIR>/lib/${TOOLCHAIN}"

#   CMAKE_ARGS "-DCMAKE_INSTALL_PREFIX=${LINK_LIBS}/jasper/${XCSOAR_JASPER_VERSION}" "-DCMAKE_INSTALL_INCLUDEDIR=include" "-DCMAKE_INSTALL_LIBDIR=lib/${TOOLCHAIN}"
   BUILD_ALWAYS true
   # BUILD_IN_SOURCE true
)

# ExternalProject_Add(
#    curl
#    # URL ""
#    PREFIX  "${THIRD_PARTY}/curl"
# 
#    CMAKE_ARGS "-DCMAKE_INSTALL_PREFIX=${LINK_LIBS}/curl" "-DCMAKE_INSTALL_INCLUDEDIR=include" "-DCMAKE_INSTALL_LIBDIR=lib/${TOOLCHAIN}"
#    BUILD_ALWAYS true
#    # BUILD_IN_SOURCE true
# )


# add_subdirectory(${THIRD_PARTY}/zzip/zzip-0.0.1               zzip)

# add_subdirectory(${THIRD_PARTY}/zlib/${XCSOAR_ZLIB_VERSION}   zlib)
# set_target_properties(zlib PROPERTIES FOLDER 3rdParty)
# set_target_properties(zlibstatic PROPERTIES FOLDER 3rdParty)

# add_subdirectory(${THIRD_PARTY}/lua/lua-5.3.5                 lua)

add_subdirectory(${THIRD_PARTY}/mapserver/${XCSOAR_MAPSERVER_VERSION}         mapserver)

# add_subdirectory(${THIRD_PARTY}/curl/${XCSOAR_CURL_VERSION}   curl EXCLUDE_FROM_ALL)
# set_target_properties(libcurl PROPERTIES FOLDER 3rdParty)

# add_subdirectory(${THIRD_PARTY}/jasper/${XCSOAR_JASPER_VERSION}   jasper)

# sadd_subdirectory(${THIRD_PARTY}/jasper/Jasper-2.0.14  jasper)

add_subdirectory(boost)
